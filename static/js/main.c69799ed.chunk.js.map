{"version":3,"sources":["components/List.js","components/App.js","index.js"],"names":["List","props","items","itemList","map","item","index","className","text","onClick","deleteTodo","App","state","localStorage","getItem","JSON","parse","addTodo","bind","e","preventDefault","form","target","newTodo","todoInput","value","this","setState","newState","push","setItem","stringify","todoIndex","parentNode","childNodes","innerHTML","splice","id","onSubmit","name","type","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kMAmBeA,MAnBf,SAAcC,GACV,IAAIC,EAAQD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAElC,OAAO,sBAAKC,UAAU,6BAAf,UACH,sBAAMA,UAAU,QAAhB,SAAyBD,EAAM,IAC/B,qBAAKC,UAAU,QAAf,SAAwBF,EAAKG,OAC7B,mBAAGD,UAAU,yBAAyBE,QAASR,EAAMS,mBAU7D,OALA,8BACKR,KCkFMS,E,kDAxFX,WAAYV,GAAO,IAAD,8BAEd,cAAMA,IAEDW,MAAQ,CAETV,MAAwC,MAAjCW,aAAaC,QAAQ,SAAmBC,KAAKC,MAAMH,aAAaC,QAAQ,UAAa,CAAC,CAAC,KAAQ,oEAG1G,EAAKG,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAVJ,E,oDAcVC,GAEJA,EAAEC,iBAEF,IAAIC,EAAOF,EAAEG,OACTC,EAAUF,EAAKG,UAAUC,MAI7BC,KAAKC,UAAU,SAACf,GAEZ,IAAIgB,EAAWhB,EASf,MANe,KAAZW,GACCK,EAAS1B,MAAM2B,KAAM,CAACrB,KAAMe,IAGhCV,aAAaiB,QAAQ,QAASf,KAAKgB,UAAUH,EAAS1B,QAE/C,CAAC0B,eAIZP,EAAKG,UAAUC,MAAQ,K,iCAGhBN,GAEP,IAAIa,EAAYb,EAAEG,OAAOW,WAAWC,WAAW,GAAGC,UAAY,EAG9DT,KAAKC,UAAU,SAACf,GAEZ,IAAIgB,EAAWhB,EAEXV,EAAQ0B,EAAS1B,MASrB,OAPAA,EAAMkC,OAAOJ,EAAW,GAExBJ,EAAS1B,MAAQA,EAGjBW,aAAaiB,QAAQ,QAASf,KAAKgB,UAAUH,EAAS1B,QAE/C,CAAC0B,iB,+BAyBZ,OAhBA,sBAAKS,GAAG,YAAY9B,UAAU,oBAA9B,UACI,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,QAAf,SACI,uBAAMA,UAAU,MAAM+B,SAAUZ,KAAKT,QAArC,UACI,uBAAOsB,KAAK,YAAYC,KAAK,OAAOjC,UAAU,mBAAmBkC,YAAY,wEAC7E,wBAAQD,KAAK,SAASjC,UAAU,uBAAhC,qEAIZ,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CAAMJ,SAAUuB,KAAKd,MAAMV,MAAOQ,WAAYgB,KAAKhB,wB,GAlFrDgC,IAAMC,WCKxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c69799ed.chunk.js","sourcesContent":["function List(props){\r\n    let items = props.itemList.map((item, index)=>{\r\n        // 1. Купить молоко (Иконка)\r\n        return <div className=\"row justify-content-around\">\r\n            <span className=\"col-1\">{index+1}</span> \r\n            <div className=\"col-9\">{item.text}</div>    \r\n            <i className=\"bi bi-trash-fill col-1\" onClick={props.deleteTodo} ></i>\r\n        </div>\r\n    })\r\n\r\n    let elem = \r\n    <div>\r\n        {items}\r\n    </div>\r\n\r\n\r\n    return elem\r\n}\r\n\r\nexport default List\r\n","import React from \"react\"\nimport List from \"./List\"\n// React-Component это основной объект Приложения\nclass App extends React.Component {\n\n    // Функция которая настраивает React-Component\n    constructor(props){\n        // Передаём основную настройку в библиотеку React\n        super(props)\n        // Создаём парметры, которые должны хранится в памяти !приложения!\n        this.state = {\n            // Тернарное условие     УСЛОВИЕ ? ПРАВДА : НЕ_ПРАВДА\n            items: localStorage.getItem(\"items\") != null ? JSON.parse(localStorage.getItem(\"items\"))  : [{\"text\": \"Добавь дело!\"}]\n        }\n        // Подключаем к Event-Функции функцию Компонента \n        this.addTodo = this.addTodo.bind(this)\n        this.deleteTodo = this.deleteTodo.bind(this)\n    }\n\n    // Event-Функция во время события Submit для добавления нового дела\n    addTodo(e){\n        // Отменяем перезагрузку страницы\n        e.preventDefault()\n        // Элемент который вызвал событие\n        let form = e.target\n        let newTodo = form.todoInput.value\n        // Изменить state\n        // .setState( (state)=>{............      return {state}} )\n        // Обновить state и добавить в items новое дело\n        this.setState( (state)=>{\n            // Берём мозг\n            let newState = state\n            // Обновляем память items\n            // Если текст не пустой, то добавляем\n            if(newTodo !== \"\"){\n                newState.items.push( {text: newTodo} )\n            }\n\n            localStorage.setItem(\"items\", JSON.stringify(newState.items) )\n            // Возвращаем мозг\n            return {newState}\n        })\n\n        // Очистить input\n        form.todoInput.value = \"\"\n    }\n    // Event-Функция во время события Click для удаления дела\n    deleteTodo(e){\n        // Выходим к родителю, берём первый элемент (это наш span)\n        let todoIndex = e.target.parentNode.childNodes[0].innerHTML - 1\n        // Обновить состояние state, удалить дело по индексу\n        // ****************\n        this.setState( (state)=>{\n            // Берём мозг\n            let newState = state\n            // Береём items\n            let items = newState.items\n            // Удаляем дело по номеру\n            items.splice(todoIndex, 1)\n            // Возвращаем новый массив\n            newState.items = items;\n\n\n            localStorage.setItem(\"items\", JSON.stringify(newState.items) )\n            // Возвращаем мозг\n            return {newState}\n        })\n    } \n\n\n    // Рендер нашего компонента\n    render(){\n        \n        let elem = \n        <div id=\"todo-list\" className=\"container-md mt-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-4\">\n                    <form className=\"row\" onSubmit={this.addTodo}>\n                        <input name=\"todoInput\" type=\"text\" className=\"col form-control\" placeholder=\"Введите дело\"/>\n                        <button type=\"submit\" className=\"col-3 btn btn-danger\">Добавить</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-4\">\n                    <List itemList={this.state.items} deleteTodo={this.deleteTodo}/>\n                </div>\n            </div>\n        </div>\n\n        return elem\n    }\n}\n\nexport default App","// Импорт основных модулей React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Импорт компонентов\n// App => Приложение \"Todo List\"\nimport App from './components/App';\n// Рендерим страничку в index.html в тег div#root\n// .render(ЧТО-МЫ-РЕНДЕРИМ,  ГДЕ-МЫ-РЕНДЕРИМ)\nReactDOM.render(<App/>,  document.getElementById('root'));"],"sourceRoot":""}